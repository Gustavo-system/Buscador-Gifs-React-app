{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifImages.js","Components/BodyGif.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setSeries","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","ser","type","value","onChange","target","getGifs","categoria","a","urlHttps","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifImages","className","src","alt","BodyGif","carga","state","setState","useEffect","then","useFetchGifs","imagenes","GifApp","series","el","ReactDOM","render","document","getElementById"],"mappings":"uKAGaA,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,UAAc,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAqBvC,OACI,sBAAMC,SAVO,SAACC,GACdA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAW,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACnCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACwCC,UAAUH,GADlD,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAeZL,GAfY,4CAAH,sDCEPQ,EAAY,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAI9B,OACI,sBAAKI,UAAU,yBAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,EAAOK,UAAU,aACrC,kCAAKL,EAAL,WCLCQ,EAAU,SAAC,GAAiB,IAAhBpB,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNc,OAAO,IAH4B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACNzB,EAAQC,GAAWyB,MAAM,SAAAf,GACrBa,EAAS,CACLhB,KAAMG,EACNW,OAAO,SAGhB,CAACrB,IAEGsB,EDZwBI,CAAa1B,GAAhC2B,EAFwB,EAE7BpB,KAAec,EAFc,EAEdA,MAEtB,OACI,qCACI,6BAAMrB,IAELqB,GAAS,mBAAGJ,UAAU,iBAAb,0BACV,qBAAKA,UAAU,YAAf,SAGQU,EAASlB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBiB,EAAS,WAAK,MAEK1C,mBAAS,IAFd,mBAEhB2C,EAFgB,KAER5C,EAFQ,KASvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,UAAWA,IACxB,uBACA,6BAEQ4C,EAAOpB,KAAI,SAAAqB,GAAE,OAAI,cAAC,EAAD,CAAoB9B,UAAW8B,GAAhBA,Y,MCdpDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5095c6bb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setSeries}) =>{\r\n\r\n    const [inputValue, setImputValue] = useState('')\r\n\r\n    //sirve para cambiar el estado del compnente por medio del set del useState();\r\n    const inputChange = (e) =>{\r\n        setImputValue(e.target.value);\r\n    }\r\n\r\n    /*captura el evento submit, con el preventDefault se evita recargar la pagina\r\n    se obtiene el valor del otro componente por medio de los props requeridos y se hace un callback para\r\n    hacer la modificacion del valor*/\r\n    const isSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setSeries( ser => [ inputValue, ...ser ]);\r\n            setImputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={isSubmit}>\r\n            <input \r\n                type=\"Text\"\r\n                value={inputValue}\r\n                onChange={inputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\n/**se agregan los props para obligar los datos que de deben proporcionar\r\n * dentro del componente.\r\n */\r\nAddCategory.propTypes={\r\n    setSeries: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(categoria) =>{\r\n    const urlHttps = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=ZmFOD8u5nINIlarCbA4aLqBDN28ZFZNa`;\r\n    const resp = await fetch(urlHttps);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    //console.log(gifs);\r\n    //setImgenes(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifImages = ({title, url}) => {\r\n\r\n    //console.log({title, url});\r\n\r\n    return (\r\n        <div className=\"card animate__bounceIn\">\r\n            <img src={url} alt={title} className=\"img-item\"/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// renderisa la imagen y el titulo depsues de que fue hecha la peticion al api\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifImages} from '../Components/GifImages'\r\n\r\nexport const BodyGif = ({categoria}) => {\r\n\r\n    const {data:imagenes, carga} = useFetchGifs(categoria);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ categoria }</h3>\r\n\r\n            {carga && <p className=\"animate__flash\">Cargando ...</p>}\r\n            <div className=\"container\">\r\n\r\n                {\r\n                    imagenes.map( img => (\r\n                        <GifImages \r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        carga: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria).then( img => {\r\n            setState({\r\n                data: img,\r\n                carga: false\r\n            });\r\n        });\r\n    }, [categoria])\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Este es un coostomhook","import React,{useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { BodyGif } from './Components/BodyGif';\r\n\r\nexport const GifApp = () =>{\r\n    //se podria pasar un parametro dentro del useState, que seria el primero que aparecera al cargar la pagina\r\n    const [series, setSeries] = useState([]);\r\n\r\n    // const agregar = () =>{\r\n    //     let nombreSerie = 'hombres de negro';\r\n    //     setSeries([...series, nombreSerie]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Search Gifs:</h2>\r\n            <AddCategory setSeries={setSeries}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    series.map(el => <BodyGif key={ el } categoria={el}/> )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifApp } from './GifApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}